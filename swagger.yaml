openapi: 3.0.0
info:
  title: E-Commerce API
  contact: {}
  version: '1.0'
servers:
  - url: https://e-commerce-api-7k6r.onrender.com/api/v1
    variables: {}
paths:
  /auth/register:
    post:
      tags:
        - Auth
      summary: Register User
      operationId: RegisterUser
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/RegisterUserRequest'

        required: true
      responses:
        '201':
          description: ''
          headers: {}
      deprecated: false
      security: []
  /auth/login:
    post:
      tags:
        - Auth
      summary: Login User
      operationId: LoginUser
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/LoginUserRequest'
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
  /auth/logout:
    get:
      tags:
        - Auth
      summary: Logout User
      operationId: LogoutUser
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
  /users:
    get:
      tags:
        - Users
      summary: Get All Users
      operationId: GetAllUsers
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []

  /users/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: the user id
    get:
      tags:
        - Users
      summary: Get Single User
      operationId: GetSingleUser
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
  /users/showMe:
    get:
      tags:
        - Users
      summary: Show Current User
      operationId: ShowCurrentUser
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
  /users/updateUser:
    patch:
      tags:
        - Users
      summary: Update User
      operationId: UpdateUser
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateUserRequest'
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
  /users/updateUserPassword:
    patch:
      tags:
        - Users
      summary: Update User Password
      operationId: UpdateUserPassword
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateUserPasswordRequest'
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
  /products:
    get:
      tags:
        - Products
      summary: Get All Products
      operationId: GetAllProducts
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []

    post:
      tags:
        - Products
      summary: Create Product
      operationId: CreateProduct
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/CreateProductRequest'
        required: true
      responses:
        '201':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
  /products/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: the product id
    get:
      tags:
        - Products
      summary: Get Single Product
      operationId: GetSingleProduct
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
    patch:
      tags:
        - Products
      summary: Update a Product
      operationId: UpdateaProduct
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/CreateProductRequest'
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
    delete:
      tags:
        - Products
      summary: Delete a Product
      operationId: DeleteProduct
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
  /products/uploadImage:
    post:
      tags:
        - Products
      summary: Upload Product Image
      operationId: UploadProductImage
      requestBody:
        description: ''
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
  /products/{id}/reviews:
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: the product id
    get:
      tags:
        - Products
      summary: Get Product Reviews
      operationId: GetProductReviews
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
  /reviews:
    get:
      tags:
        - Reviews
      summary: Get All Reviews
      operationId: GetAllReviews
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []

    post:
      tags:
        - Reviews
      summary: Create Review
      operationId: CreateReview
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/CreateReviewRequest'
        required: true
      responses:
        '201':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
  /reviews/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: the review id
    get:
      tags:
        - Reviews
      summary: Get Single Review
      operationId: GetSingleReview
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
    patch:
      tags:
        - Reviews
      summary: Update a Review
      operationId: UpdateaReview
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateReviewRequest'
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
    delete:
      tags:
        - Reviews
      summary: Delete a Review
      operationId: DeleteReview
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
  /orders:
    get:
      tags:
        - Orders
      summary: Get All Orders
      operationId: GetAllOrders
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []

    post:
      tags:
        - Orders
      summary: Create Order
      operationId: CreateOrder
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/CreateOrderRequest'
        required: true
      responses:
        '201':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
  /orders/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: the order id
    get:
      tags:
        - Orders
      summary: Get Single Order
      operationId: GetSingleOrder
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
    patch:
      tags:
        - Orders
      summary: Update a Orders
      operationId: UpdateaOrder
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateOrderRequest'
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
  /orders/showAllMyOrders:
    get:
      tags:
        - Orders
      summary: Show All My Orders
      operationId: ShowAllMyOrders
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []

components:
  schemas:
    UpdateUserRequest:
      title: UpdateUserRequest
      required:
        - name
        - email
      type: object
      properties:
        name:
          type: string
        email:
          type: string
    RegisterUserRequest:
      title: RegisterUserRequest
      required:
        - name
        - email
        - password
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
    LoginUserRequest:
      title: LoginUserRequest
      required:
        - email
        - password
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    UpdateUserPasswordRequest:
      title: UpdateUserPasswordRequest
      required:
        - currentPassword
        - newPassword
        - confirmPassword
      type: object
      properties:
        currentPassword:
          type: string
        newPassword:
          type: string
        confirmPassword:
          type: string
    CreateProductRequest:
      title: CreateProductRequest
      required:
        - name
        - price
        - description
        - category
        - company
      type: object
      properties:
        name:
          type: string
        price:
          type: number
        description:
          type: string
        image:
          type: string
        category:
          type: number
        company:
          type: string
        colors:
          type: array
          items:
            type: string
        featured:
          type: boolean
        freeShipping:
          type: boolean
        inventory:
          type: number
        averageRating:
          type: number
        noOfReviews:
          type: number
    CreateReviewRequest:
      title: CreateReviewRequest
      required:
        - rating
        - title
        - comment
        - product
      type: object
      properties:
        rating:
          type: number
        title:
          type: string
        comment:
          type: string
        product:
          type: string
    UpdateReviewRequest:
      title: CreateReviewRequest
      required:
        - rating
        - title
        - comment
      type: object
      properties:
        rating:
          type: number
        title:
          type: string
        comment:
          type: string
    CreateOrderRequest:
      title: CreateOrderRequest
      required:
        - tax
        - shippingFee
        - items
      type: object
      properties:
        tax:
          type: number
        shippingFee:
          type: number
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItems'
    OrderItems:
      title: OrderItems
      required:
        - name
        - image
        - price
        - amount
        - product
      type: object
      properties:
        name:
          type: string
        image:
          type: string
        price:
          type: number
        amount:
          type: number
        product:
          type: string
    UpdateOrderRequest:
      title: UpdateOrderRequest
      required:
        - paymentIntentId
      type: object
      properties:
        paymentIntentId:
          type: string
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
security: []
tags:
  - name: Auth
    description: ''
  - name: Users
    description: ''
  - name: Products
    description: ''
  - name: Reviews
    description: ''
  - name: Orders
    description: ''
